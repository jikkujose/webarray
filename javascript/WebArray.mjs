var _a;export class WebArray{constructor(e){this.read=async()=>{let e={};if(this.keys.read){if(e=await WebArray.get("read",{key:this.keys.read}),e.error)throw new Error("Unauthorized: Bad key");return e.payload}throw new Error("Unauthorized: `read` key missing")},this.updatedAt=async()=>{let e={};if(this.keys.read){if(e=await WebArray.get("read",{key:this.keys.read}),e.error)throw new Error("Unauthorized: Bad key");return e.meta?.updatedAt}throw new Error("Unauthorized: `read` key missing")},this.append=async e=>{let r={};if(this.keys.append){if(r=await WebArray.post("append",{key:this.keys.append,data:e}),r.error)throw new Error("Unauthorized: Bad key");return r.payload}throw new Error("Unauthorized: `append` key missing")},this.replace=async(e=null)=>{let r={};if(this.keys.replace){if(r=await WebArray.post("replace",{key:this.keys.replace,data:e}),r.error)throw new Error("Unauthorized: Bad key");return r.payload}throw new Error("Unauthorized: `replace` key missing")},this.keys=e}}_a=WebArray,WebArray.API_URL="https://webarray.toolbomber.com/api",WebArray.SHORT_HASH_LENGTH=6,WebArray.create=async e=>{const r=await WebArray.post("create",{seed:e});return new WebArray(r)},WebArray.generateKeys=async e=>await WebArray.post("create",{seed:e}),WebArray.post=async(e,r)=>{const a=`${WebArray.API_URL}/${e}`;try{const e=await fetch(a,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});return await e.json()}catch(e){console.error("There was a problem with the fetch operation:",e)}},WebArray.get=async(e,r)=>{const a=new URLSearchParams(r).toString(),t=`${WebArray.API_URL}/${e}?${a}`;try{const e=await fetch(t,{method:"GET",headers:{"Content-Type":"application/json"}});return await e.json()}catch(e){console.error("There was a problem with the fetch operation:",e)}};